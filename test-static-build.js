#!/usr/bin/env node

import { execSync } from 'child_process';
import { readdirSync, statSync } from 'fs';
import { join } from 'path';

console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫—É—é —Å–±–æ—Ä–∫—É...');

try {
  // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–±–æ—Ä–∫—É
  console.log('üßπ –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å–±–æ—Ä–∫—É...');
  execSync('rm -rf dist', { stdio: 'inherit' });
  
  // –°–æ–±–∏—Ä–∞–µ–º —Å–∞–π—Ç
  console.log('üî® –°–æ–±–∏—Ä–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–π —Å–∞–π—Ç...');
  execSync('npm run build', { stdio: 'inherit' });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  console.log('üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã...');
  const distDir = './dist';
  const files = getAllFiles(distDir);
  
  console.log(`‚úÖ –°–æ–±—Ä–∞–Ω–æ ${files.length} —Ñ–∞–π–ª–æ–≤:`);
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
  const fileTypes = {};
  files.forEach(file => {
    const ext = file.split('.').pop()?.toLowerCase();
    fileTypes[ext] = (fileTypes[ext] || 0) + 1;
  });
  
  Object.entries(fileTypes).forEach(([ext, count]) => {
    console.log(`   ${ext}: ${count} —Ñ–∞–π–ª–æ–≤`);
  });
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
  const requiredFiles = ['index.html', 'blog/index.html', 'about/index.html'];
  const missingFiles = requiredFiles.filter(file => !files.some(f => f.includes(file)));
  
  if (missingFiles.length > 0) {
    console.log('‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ñ–∞–π–ª—ã:', missingFiles);
  } else {
    console.log('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç');
  }
  
  console.log('üéâ –¢–µ—Å—Ç —Å–±–æ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
  console.log('üìÇ –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –≤ –ø–∞–ø–∫–µ dist/');
  
} catch (error) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error.message);
  process.exit(1);
}

function getAllFiles(dirPath, arrayOfFiles = []) {
  const files = readdirSync(dirPath);
  
  for (const file of files) {
    const fullPath = join(dirPath, file);
    
    if (statSync(fullPath).isDirectory()) {
      arrayOfFiles = getAllFiles(fullPath, arrayOfFiles);
    } else {
      arrayOfFiles.push(fullPath);
    }
  }
  
  return arrayOfFiles;
} 